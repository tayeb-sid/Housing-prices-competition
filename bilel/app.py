import streamlit as st
import pandas as pd
import joblib

# Charger le mod√®le
model = joblib.load('./best_model.pkl')

# R√©cup√©rer les colonnes attendues par le mod√®le
expected_columns = model.feature_names_in_

# Titre de l'application
st.title('Pr√©diction des prix des maisons üè†')

st.markdown('**Remplissez les caract√©ristiques suivantes pour pr√©dire le prix :**')

# Cr√©ation des champs pour chaque feature (adapte selon tes donn√©es)
overall_qual = st.number_input('Qualit√© g√©n√©rale (OverallQual)', min_value=1, max_value=10, value=5)
gr_liv_area = st.number_input('Surface habitable au-dessus du sol (GrLivArea)', min_value=0, value=1500)
garage_cars = st.number_input('Nombre de voitures dans le garage (GarageCars)', min_value=0, value=2)
total_bsmt_sf = st.number_input('Surface totale du sous-sol (TotalBsmtSF)', min_value=0, value=1000)

# Construire le DataFrame pour les pr√©dictions
input_data = pd.DataFrame({
    'OverallQual': [overall_qual],
    'GrLivArea': [gr_liv_area],
    'GarageCars': [garage_cars],
    'TotalBsmtSF': [total_bsmt_sf]
})

# Adapter les colonnes aux attentes du mod√®le
input_data = input_data.reindex(columns=expected_columns, fill_value=0)

# Afficher les donn√©es utilisateur pour v√©rification
st.subheader('Donn√©es saisies :')
st.dataframe(input_data)

# Bouton pour faire la pr√©diction
if st.button('Pr√©dire le Prix'):
    try:
        prediction = model.predict(input_data)
        st.subheader('Prix Pr√©vu :')
        st.success(f'{prediction[0]:,.2f} $')
    except Exception as e:
        st.error(f"Erreur lors de la pr√©diction : {e}")

# Afficher les colonnes attendues (debugging)
st.sidebar.title('Debugging üõ†Ô∏è')
st.sidebar.write('Colonnes attendues par le mod√®le :', expected_columns)
